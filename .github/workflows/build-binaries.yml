name: Build Binaries

on:
  push:
    branches:
      - main
      - build-binaries
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-macos-arm:
    name: Build macOS ARM64 (Apple Silicon)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Install Rust target
        run: rustup target add aarch64-apple-darwin

      - name: Check required tools
        run: make check

      - name: Install dependencies
        run: make install

      - name: Build sidecars
        run: make build

      - name: Build macOS ARM64
        run: make build-macos-arm

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-build
          path: |
            src-tauri/target/aarch64-apple-darwin/release/bundle/**/*
          retention-days: 30

  build-macos-x86:
    name: Build macOS x86_64 (Intel)
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      - name: Install Rust target
        run: rustup target add x86_64-apple-darwin

      - name: Check required tools
        run: make check

      - name: Install dependencies
        run: make install

      - name: Build sidecars
        run: make build

      - name: Build macOS x86_64
        run: make build-macos-x86

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64-build
          path: |
            src-tauri/target/x86_64-apple-darwin/release/bundle/**/*
          retention-days: 30

  build-linux:
    name: Build Linux x86_64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libgtk-3-dev \
            libsoup-3.0-dev \
            libjavascriptcoregtk-4.1-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Check required tools
        run: make check

      - name: Install dependencies
        run: make install

      - name: Build sidecars
        run: make build

      - name: Build Linux
        run: make build-linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-build
          path: |
            src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/**/*
          retention-days: 30

  build-windows:
    name: Build Windows x86_64
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Check required tools
        run: make check
        shell: bash

      - name: Install dependencies
        run: make install
        shell: bash

      - name: Build sidecars
        run: make build
        shell: bash

      - name: Build Windows
        run: make build-windows
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-x86_64-build
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/**/*
          retention-days: 30

  create-release:
    name: Create Release
    needs: [build-macos-arm, build-macos-x86, build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

